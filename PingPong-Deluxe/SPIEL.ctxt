#BlueJ class context
comment0.target=SPIEL
comment0.text=\n\ Die\ Klasse\ SPIEL\ ist\ ein\ Template,\ das\ so\ wie\ es\ ist\ an\ Schueler\ ausgegeben\ werden\ kann.\n\ (Einzige\ Voraussetzung\ ist,\ dass\ die\ engine-alpha-Bibliothek\ im\ Suchpfad\ erreichbar\ ist.)\n\ Es\ startet\ alles\ Notwendige\ fuer\ ein\ Spiel.\n\ \n\ Beim\ Konstruktor\ ohne\ Parameter\ gibt\ es\ keine\ Punkte-Anzeigen\ und\ auch\ keine\ Maus-Interaktion.\n\ Die\ Methoden\ tick()\ und\ tasteReagieren()\ werden\ immer\ automatisch\ aufgerufen.\n\ \n\ Beim\ Konstruktor\ mit\ Parametern\ koennen\ die\ linken\ und\ rechten\ Punkte-Anzeigen\ sowie\ die\ \n\ Interaktion\ mit\ der\ Maus\ ein-\ bzw.\ ausgeschaltet\ werden.\n\ \n\ @author\ Michael\ Andonie\ und\ Mike\ Ganshorn\ \ (nach\ Idee\ von\ Bendikt\ Lindemann)\n\ \n\ @version\ \ \ \ \ 2.3\ (2017-04-11)\n\ \n\ @changelog\ \ \ 2.3\ Ticker\ startet\ NICHT\ mehr\ automatisch\ \!\!\!\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Methoden-Signaturen\ "geglaettet"\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ neue\ Konstruktoren\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Methode\ tasteGedrueckt(\ int\ taste\ )\n\ \n
comment1.params=
comment1.target=SPIEL()
comment1.text=\n\ Erstellt\ ein\ einfaches\ Spiel\:\ Breite\ 800\ ,\ Hoehe\ 600\ ,\ ohne\ Punktestand\ und\ Maus.\ <br\ />\ \n\ Ueberschreibe\ bei\ Bedarf\ die\ Methoden\ tick()\ bzw.\ tasteReagieren(int\ taste).\n
comment10.params=pfad\ hotspotX\ hotspotY
comment10.target=void\ setzeMausIcon(java.lang.String,\ int,\ int)
comment10.text=\n\ Setzt\ ein\ neues\ Maus-Icon.\n\ \n\ @param\ \ \ pfad\ \ \ \ \ \ \ \ Der\ Pfad\ zu\ dem\ Bild\ (jpg,\ bmp,\ png),\ das\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ das\ neue\ Maus-Icon\ werden\ soll.\ ZB\:\ "mausicon.png"\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @param\ \ \ hotspotX\ \ \ \ Die\ X-Koordinate\ des\ Hotspots\ fuer\ das\ neue\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Maus-Icon.\ (relativ\ im\ Icon)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @param\ \ \ hotspotY\ \ \ \ Die\ Y-Koordinate\ des\ Hotspots\ fuer\ das\ neue\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Maus-Icon.\ (relativ\ im\ Icon)\n
comment11.params=
comment11.target=void\ setzeAllePunkteanzeigenSichtbar()
comment11.text=\n\ Sorgt\ dafuer,\ dass\ sowohl\ der\ rechte\ als\ auch\ der\ linke\ Punktestand\ sichtbar\ ist.\n
comment12.params=
comment12.target=void\ setzeNurRechtePunkteanzeigeSichtbar()
comment12.text=\n\ Sorgt\ dafuer,\ dass\ nur\ der\ linke\ Punktestand\ sichtbar\ ist.\n
comment13.params=
comment13.target=void\ setzeNurLinkePunkteanzeigeSichtbar()
comment13.text=\n\ Sorgt\ dafuer,\ dass\ nur\ der\ rechte\ Punktestand\ sichtbar\ ist.\n
comment14.params=
comment14.target=void\ setzeAllePunkteanzeigenUnsichtbar()
comment14.text=\n\ Sorgt\ dafuer,\ dass\ weder\ der\ rechte\ noch\ der\ linke\ Punktestand\ sichtbar\ ist.\n
comment15.params=neuerPunktestand
comment15.target=void\ setzePunkteanzeigeLinks(int)
comment15.text=\n\ Setzt\ den\ linken\ Punktestand.\ Aenderungen\ sind\ nur\ sichtbar,\n\ wenn\ auch\ der\ linke\ Punktestand\ sichtbar\ ist.\n\ \n\ @param\ \ \ neuerPunktestand\ \ \ \ \ \ Der\ neue\ linke\ Punktestand.\n
comment16.params=neuerPunktestand
comment16.target=void\ setzePunkteanzeigeRechts(int)
comment16.text=\n\ Setzt\ den\ rechten\ Punktestand.\ Aenderungen\ sind\ nur\ sichtbar,\n\ wenn\ auch\ der\ rechte\ Punktestand\ sichtbar\ ist.\n\ \n\ @param\ \ \ neuerPunktestand\ \ \ \ \ \ Der\ neue\ rechte\ Punktestand.\n
comment17.params=farbe
comment17.target=void\ setzePunkteanzeigeFarbe(java.lang.String)
comment17.text=\n\ Aendert\ die\ Farbe\ der\ Punktestandsanzeige\n\n\ @param\ farbe\ \ \ \ \ Die\ neue\ Farbe\ der\ Puntkestandsanzeige\n
comment18.params=von\ bis
comment18.target=int\ zufallszahlVonBis(int,\ int)
comment18.text=\n\ Gibt\ eine\ Zufallszahl\ aus.\n\ \n\ @param\ von\ \ \ Die\ Untergrenze\ der\ Zufallszahl\ (INKLUSIVE)\n\ \n\ @param\ bis\ \ \ Die\ Obergrenze\ der\ Zufallszahl\ (INKLUSIVE)\n\ \n\ @return\ \ \ \ \ \ Eine\ Zufallszahl\ z\ mit\:\ \ \ von\ <\=\ z\ <\=\ bis\n
comment19.params=pfad
comment19.target=void\ setzeHintergrundgrafik(java.lang.String)
comment19.text=\n\ Setzt\ eine\ Hintergrundgrafik\ fuer\ das\ Spiel.\ Dieses\ Bild\ liegt\ immer\ hinter\ allen\ anderen\ Objekten.\ \n\ \n\ @param\ \ \ pfad\ \ \ \ Der\ Pfad\ der\ Bilddatei\ (jpg,\ bmp,\ png)\ des\ Bildes,\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ das\ benutzt\ werden\ soll.\ ZB\:\ "hintergrund.jpg"\n
comment2.params=breite\ hoehe
comment2.target=SPIEL(int,\ int)
comment2.text=\n\ Erstellt\ ein\ einfaches\ Spiel\ ohne\ Punktestand\ und\ Maus.\ <br\ />\ \n\ Ueberschreibe\ bei\ Bedarf\ die\ Methoden\ tick()\ bzw.\ tasteReagieren(int\ taste).\n\ \n\ @param\ \ \ breite\ \ \ \ \ \ Breite\ des\ Spielfelds\ in\ Pixel\n\ \n\ @param\ \ \ hoehe\ \ \ \ \ \ \ Hoehe\ des\ Spielfelds\ in\ Pixel\n
comment20.params=ms
comment20.target=void\ warte(int)
comment20.text=\n\ Wartet\ um\ die\ Angegebene\ Anzahl\ an\ Millisekunden\ bis\ zur\ Ausfuehrung\ des\ naechsten\ Befehls.\ \n\ \!\!\!\ VORSICHT\ \!\!\!\ Innerhlab\ der\ Methode\ tick()\ \ N\ I\ C\ H\ T\ \ verwenden\ \!\!\!\n\n\ @param\ \ \ ms\ \ Die\ zu\ wartende\ Zeit\ in\ Millisekunden\n
comment21.params=taste
comment21.target=boolean\ tasteGedrueckt(int)
comment21.text=\n\ Ueberprueft,\ ob\ eine\ Taste\ gerade\ gedrueckt\ gehalten\ wird.\n\ \n\ @param\ \ \ taste\ \ \ Der\ ganzzahlige\ Wert,\ der\ fuer\ die\ gedrueckte\ Taste\ steht.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Details\ koennen\ in\ der\ <i>Tabelle\ aller\ Tastaturkuerzel</i>\ abgelesen\ werden.\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Oder\ man\ verwendet\ die\ ENUM-Typen\ der\ Klasse\ TASTE\ (Klassen-Doku\ lesen).\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @return\ \ true,\ falls\ die\ Taste\ gedrueckt\ gehalten\ wird.\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n
comment3.params=breite\ hoehe\ maus
comment3.target=SPIEL(int,\ int,\ boolean)
comment3.text=\n\ Erstellt\ ein\ einfaches\ Spiel\ ohne\ Punktestand\ aber\ mit\ Maus.\ <br\ />\ \n\ Ueberschreibe\ bei\ Bedarf\ die\ Methoden\ tick()\ bzw.\ tasteReagieren(int\ taste).\n\ \n\ @param\ \ \ breite\ \ \ \ \ \ Breite\ des\ Spielfelds\ in\ Pixel\n\ \n\ @param\ \ \ hoehe\ \ \ \ \ \ \ Hoehe\ des\ Spielfelds\ in\ Pixel\n\ \n\ @param\ \ \ maus\ \ \ \ \ \ \ \ true,\ wenn\ ein\ Mauszeiger\ angezeigt\ werden\ soll,\ sonst\ false\n
comment4.params=breite\ hoehe\ punkteLinks\ punkteRechts\ maus
comment4.target=SPIEL(int,\ int,\ boolean,\ boolean,\ boolean)
comment4.text=\n\ Erstellt\ ein\ einfaches\ Spiel\ mit\ 2\ Punkteanzeigen\ und\ mit\ Maus.\ <br\ />\ \n\ Ueberschreibe\ bei\ Bedarf\ die\ Methoden\ tick()\ bzw.\ tasteReagieren(int\ taste).\n\ \n\ @param\ \ \ breite\ \ \ \ \ \ \ \ \ \ Breite\ des\ Fensters\ in\ Pixel\n\ \n\ @param\ \ \ hoehe\ \ \ \ \ \ \ \ \ \ \ Hoehe\ des\ Fensters\ in\ Pixel\n\ \n\ @param\ \ \ punkteLinks\ \ \ \ \ true\ \ \:\ man\ sieht\ links\ eine\ Punkteanzeige\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ \:\ man\ sieht\ sie\ nicht\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @param\ \ \ punkteRechts\ \ \ \ true\ \ \:\ man\ sieht\ rechts\ eine\ Punkteanzeige\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ \:\ man\ sieht\ sie\ nicht\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @param\ \ \ maus\ \ \ \ \ \ \ \ \ \ \ \ true\ \ \:\ man\ sieht\ den\ Mauszeiger\ \ (Klick-Spiel)\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ \:\ man\ sieht\ ihn\ nicht\ \ \ \ \ \ \ (reines\ Tastatur-Spiel)\n
comment5.params=
comment5.target=void\ tick()
comment5.text=\n\ Wird\ regelmaessig\ automatisch\ aufgerufen.\ So\ kommt\ Bewegung\ ins\ Spiel\!\ \n\ Tick-Intervall\ kann\ angepasst\ werden.\ Ticker\ muss\ erst\ gestartet\ werden.\n
comment6.params=x\ y
comment6.target=void\ klickReagieren(int,\ int)
comment6.text=\n\ Wird\ bei\ jedem\ Mausklick\ (Linksklick)\ automatisch\ aufgerufen.\n\ \n\ @param\ \ \ x\ \ \ Die\ X-Koordinate\ des\ Klicks\n\ \n\ @param\ \ \ y\ \ \ Die\ Y-Koordinate\ des\ Klicks\n
comment7.params=ms
comment7.target=void\ tickerIntervallSetzen(int)
comment7.text=\n\ Setzt\ das\ Ticker-Intervall.\n\ \n\ @param\ \ \ ms\ \ Die\ Zeit\ in\ Millisekunden\ zwischen\ zwei\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ Aufrufen\ der\ <code>tick()</code>-Methode.\n
comment8.params=
comment8.target=void\ tickerStoppen()
comment8.text=\n\ Stoppt\ die\ Ticker-Funktion.\ Die\ <code>tick()</code>-Methode\n\ wird\ nicht\ weiter\ aufgerufen.\ Der\ automatische\ Aufruf\ der\ \n\ <code>tick()</code>-Methode\ kann\ durch\ die\ Methode\ \n\ <code>tickerNeuStarten(int\ ms)</code>\ wiedergestartet\ werden.\n\ \n\ @see\ \ \ \ \ \#tickerNeuStarten(int)\n
comment9.params=ms
comment9.target=void\ tickerNeuStarten(int)
comment9.text=\n\ Startet\ den\ Ticker\ neu.\n\ \n\ @param\ \ \ ms\ \ \ \ \ \ Die\ Zeit\ in\ Millisekunden\ zwischen\ zwei\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Aufrufen\ der\ <code>tick()</code>-Methode.\ \n
numComments=22
